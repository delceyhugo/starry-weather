{"version":3,"sources":["components/ForecastWeatherHour.js","components/ForecastWeatherDay.js","components/Average.js","components/Settings.js","components/Loader.js","components/Weather.js","components/LocationInput.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["ForecastWeatherHour","props","type","className","src","data","condition","icon","alt","text","Math","floor","params","temp","time","substr","ForecastWeatherDay","useState","sortedData","setSortedData","useEffect","el","localTime","num","today","hour","slice","forEach","push","availableHours","tomorrow","sortingData","map","Average","curentData","humidity","uv","dailyData","daily_chance_of_rain","daily_chance_of_snow","cloud","wind_dir","speed","pressure","Settings","lang","toggleTabs","setToggleTabs","toggleTab","value","onChange","onClick","href","title","Loader","Weather","componentEl","useRef","cardEl","mounted","setMounted","weather","setWeather","apiKey","setApiKey","setParams","fetchData","where","axios","then","res","code","day","moon_phase","current","classList","add","handleCssEffect","is_day","forecast","forecastday","astro","catch","error","response","handleAlert","message","undefined","city","coords","lat","lng","index","ref","location","name","xmlns","xmlnsXlink","viewBox","id","x1","y1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","xlinkHref","data-name","points","d","Date","localtime_epoch","toLocaleDateString","weekday","month","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","parseInt","localtime","LocationInput","setCity","onSubmit","e","preventDefault","htmlFor","target","autoComplete","Alert","alert","remove","setTimeout","App","loader","setLoader","userLocation","setUserLocation","allCity","setAllCity","setAlert","ReactGA","initialize","pageview","window","pathname","search","document","navigator","geolocation","getCurrentPosition","latitude","longitude","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22e88e7f.chunk.js","sourcesContent":["import './ForecastWeather.scss'\r\n\r\nexport default function ForecastWeatherHour(props) {\r\n    return (\r\n        <>\r\n            {(() => {\r\n                if (props.type === 'current') {\r\n                return (\r\n                    <div className='weather-wrap'>\r\n                        <h3>Now</h3>\r\n                        <img src={props.data.condition.icon} alt={props.data.condition.text} />\r\n                        <h3>{Math.floor(props.data['temp_' + props.params.temp])}°</h3>\r\n                    </div>\r\n                )\r\n                } else{\r\n                return (\r\n                    <div className='weather-wrap'>\r\n                        <h3>{props.data.time.substr(11,2)} h</h3>\r\n                        <img src={props.data.condition.icon} alt={props.data.condition.text} />\r\n                        <h3>{Math.floor(props.data['temp_' + props.params.temp])}°</h3>\r\n                    </div>\r\n                )\r\n                }\r\n            })()}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport ForecastWeatherHour from './ForecastWeatherHour'\r\nimport './ForecastWeather.scss'\r\n\r\nexport default function ForecastWeatherDay(props) {\r\n    const [sortedData, setSortedData] = useState()\r\n    useEffect(() => {\r\n        // Handle organization of forecast weather by hours\r\n        function sortingData(el){\r\n            let sortedData = []\r\n            if(el.localTime <= (23 - props.num)){\r\n                el.today.hour.slice(el.localTime, el.localTime + props.num).forEach(hour => {\r\n                    sortedData.push(hour)\r\n                });\r\n            }\r\n            else{\r\n                let availableHours = (24 - el.localTime)\r\n                el.today.hour.slice(el.localTime, el.localTime + availableHours).forEach(hour => {\r\n                    sortedData.push(hour)\r\n                });\r\n                availableHours = (props.num - availableHours)\r\n                el.tomorrow.hour.slice(0, availableHours).forEach(hour => {\r\n                    sortedData.push(hour)\r\n                });\r\n            }\r\n            setSortedData(sortedData)\r\n        }\r\n        sortingData(props)\r\n    }, [props])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {sortedData ? sortedData.map(el =>(\r\n            <ForecastWeatherHour key={el.time.substr(11,2)} data={el} params={props.params} />\r\n        )): null}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Average.scss'\r\n\r\nexport default function Average(props) {\r\n    return (\r\n        <div className='average-wrap'>\r\n            <div className='col'>\r\n                <ul>\r\n                    <li>\r\n                        <h3>Humidity</h3>\r\n                        <p>{props.curentData.humidity + ' %'}</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Feels like</h3>\r\n                        <p>{props.curentData['feelslike_' + props.params.temp]}°</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>UV index</h3>\r\n                        <p>{props.curentData.uv}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className='line'></div>\r\n            <div  className='col'>\r\n                <ul>\r\n                    <li>\r\n                        <h3>Chance of rain</h3>\r\n                        <p>{props.dailyData.daily_chance_of_rain + ' %'}</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Chance of snow</h3>\r\n                        <p>{props.dailyData.daily_chance_of_snow + ' %'}</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Clouds</h3>\r\n                        <p>{props.curentData.cloud + ' %'}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className='line'></div>\r\n            <div className='col'>\r\n                <ul>\r\n                    <li>\r\n                        <h3>Wind direction</h3>\r\n                        <p>{props.curentData.wind_dir}</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Wind speed</h3>\r\n                        <p>{props.curentData['wind_'+ props.params.speed] + ' ' + props.params.speed}</p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Pressure</h3>\r\n                        <p>{props.curentData['pressure_'+ props.params.pressure] + ' ' + props.params.pressure}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './Settings.scss'\r\n\r\nexport default function Settings(props) {\r\n    const [toggleTabs, setToggleTabs] = useState({lang:'en',temp:'c',speed:'kph',pressure:'mb'})\r\n\r\n    // Handle display of selected settings\r\n    const toggleTab = (type, value) =>{\r\n        switch (type) {\r\n            case 'lang':\r\n                setToggleTabs({...toggleTabs,lang:value})\r\n                props.onChange({...toggleTabs,lang:value})\r\n                break;\r\n            case 'temp':\r\n                setToggleTabs({...toggleTabs,temp:value})\r\n                props.onChange({...toggleTabs,temp:value})\r\n                break;\r\n            case 'speed':\r\n                setToggleTabs({...toggleTabs,speed:value})\r\n                props.onChange({...toggleTabs,speed:value})\r\n                break;\r\n            case 'pressure':\r\n                setToggleTabs({...toggleTabs,pressure:value})\r\n                props.onChange({...toggleTabs,pressure:value})\r\n                break;\r\n            default :\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div className='settings-wrap'>\r\n            <div className='left'>\r\n                <ul>\r\n                    <li>Language :</li>\r\n                    <li>Temperature : </li>\r\n                    <li>Speed : </li>\r\n                    <li>Pressure : </li>\r\n                    <li>Source : </li>\r\n                </ul>\r\n            </div>\r\n            <div className='right'>\r\n                <ul>\r\n                    <li>\r\n                        <img onClick={() =>{toggleTab('lang','en')}} className={toggleTabs.lang === 'en' ? 'active' : null} src=\"https://img.icons8.com/dusk/64/000000/usa.png\" alt='en'/>\r\n                        <span> / </span>\r\n                        <img onClick={() =>{toggleTab('lang','fr')}} className={toggleTabs.lang === 'fr' ? 'active' : null} src=\"https://img.icons8.com/dusk/64/000000/france.png\" alt='fr'/>\r\n                        <span> / </span>\r\n                        <img  onClick={() =>{toggleTab('lang','es')}} className={toggleTabs.lang === 'es' ? 'active' : null} src=\"https://img.icons8.com/dusk/64/000000/spain.png\" alt='es'/>\r\n                        <span> / </span>\r\n                        <img  onClick={() =>{toggleTab('lang','de')}} className={toggleTabs.lang === 'de' ? 'active' : null} src=\"https://img.icons8.com/dusk/64/000000/germany.png\" alt='ge'/>\r\n                    </li>\r\n                    <li>\r\n                        <span onClick={() =>{toggleTab('temp','c')}} className={toggleTabs.temp === 'c' ? 'active' : null}> Celcius</span>\r\n                        <span> /</span>\r\n                        <span onClick={() =>{toggleTab('temp','f')}} className={toggleTabs.temp === 'f' ? 'active' : null}> Fahrenheit</span>\r\n                    </li>\r\n                    <li>\r\n                        <span onClick={() =>{toggleTab('speed','kph')}} className={toggleTabs.speed === 'kph' ? 'active' : null}> Km/h</span>\r\n                        <span> /</span>\r\n                        <span onClick={() =>{toggleTab('speed','mph')}} className={toggleTabs.speed === 'mph' ? 'active' : null}> Mph</span>\r\n                    </li>\r\n                    <li>\r\n                        <span onClick={() =>{toggleTab('pressure','mb')}} className={toggleTabs.pressure === 'mb' ? 'active' : null}> Millibars</span>\r\n                        <span> /</span>\r\n                        <span onClick={() =>{toggleTab('pressure','in')}} className={toggleTabs.pressure === 'in' ? 'active' : null}> Inches</span>\r\n                    </li>\r\n                    <li>\r\n                        <span><a href=\"https://www.weatherapi.com/\" title=\"Free Weather API\">WeatherAPI.com</a></span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className='Loader'>\r\n            <img src=\"https://img.icons8.com/dusk/100/000000/partly-cloudy-day--v2.png\" alt='Loading logo'/>\r\n            <h1>We checking the starry sky</h1>\r\n            <h1>Please wait <span>.</span> <span>.</span> <span>.</span></h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport './Weather.scss'\r\n// Import Axios for API call\r\nimport axios from 'axios'\r\n// Import Components\r\nimport ForecastWeatherDay from './ForecastWeatherDay'\r\nimport ForecastWeatherHour from './ForecastWeatherHour'\r\nimport Average from './Average';\r\nimport Settings from './Settings';\r\nimport Loader from './Loader';\r\n\r\nexport default function Weather(props) {\r\n    const componentEl = useRef(null);\r\n    const cardEl = useRef(null);\r\n    const [mounted, setMounted] = useState(true)\r\n    const [toggleTabs, setToggleTabs] = useState(1)\r\n    const [weather, setWeather] = useState()\r\n    const [apiKey, setApiKey] = useState()\r\n    const [params, setParams] = useState({lang:'en',temp:'c',speed:'kph',pressure:'mb'})\r\n\r\n    useEffect(() => {\r\n        // Set Api key\r\n        setApiKey('9fc431d6956447d08eb223147210108')\r\n\r\n        // Fetch data if api is defined and component is mount\r\n        if(apiKey !== undefined && mounted === true){\r\n            if(props.city !== undefined){\r\n                fetchData(props.city)\r\n            }\r\n            else if(props.coords !== undefined){\r\n                fetchData(props.coords.lat + ',' + props.coords.lng)\r\n            }\r\n        }\r\n\r\n        // Fetch Forecast and Current weather\r\n        function fetchData(where){\r\n            axios('https://api.weatherapi.com/v1/forecast.json?key=' + apiKey + '&q='+ where +'&days=2&alerts=yes&lang='+ params.lang)\r\n            .then(res =>{\r\n                // console.log(res.data)\r\n                setWeather(res.data)\r\n                handleCssEffect(res.data.current.condition.code, res.data.current.is_day, res.data.forecast.forecastday[0].astro.moon_phase)\r\n            })\r\n            .catch(error =>{\r\n                if (error.response) {\r\n                    props.handleAlert(error.response.data.error.message)\r\n                }\r\n                setMounted(false)\r\n            })\r\n        }\r\n    }, [props, apiKey, params, mounted])\r\n\r\n    // Handle display of footer tabs\r\n    const toggleTab = (index) =>{\r\n        setToggleTabs(index)\r\n    }\r\n    \r\n    // Handle display of component and if he mounted or not\r\n    function closeComponent() {\r\n        setMounted(false)\r\n    }\r\n    \r\n    // Handle component settings from <Settings/>\r\n    function handleSettings(params){\r\n        setParams(params)\r\n    }\r\n\r\n    // Handle Css style and effect (like 'Sunny' or 'Cloudy') and apply a corresponding class\r\n    function handleCssEffect(code, day, moon_phase){\r\n        if(moon_phase !== 'Fullmoon'){\r\n            switch (day) {\r\n                case 1:\r\n                    cardEl.current.classList.add('day')\r\n                    break;\r\n                case 0:\r\n                    cardEl.current.classList.add('night')\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else{\r\n            cardEl.current.classList.add('fullmoon')\r\n        }\r\n        switch (code) {\r\n            case 1003 || 1006 || 1063 || 1066 || 1069 || 1072 || 1087 || 1114:\r\n                cardEl.current.classList.add('litecloudy')\r\n                break;\r\n            case 1009 || 1117 :\r\n                cardEl.current.classList.add('overcast')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>{mounted && \r\n            <div className='Weather' ref={componentEl}>\r\n                {weather ?\r\n                <div className='card'ref={cardEl}>\r\n                    <div className='top'>\r\n                        <img onClick={closeComponent} className='close-component' src=\"https://img.icons8.com/windows/64/ffffff/macos-close.png\" alt='close component'/>\r\n                        <h3>{weather ? weather.location.name : 'Unknown'}</h3>\r\n                        <h1 className='temp'>{weather ? Math.floor(weather.current['temp_' + params.temp]) : '0'}°</h1>\r\n                        <h2 className='weather'>{weather ? weather.current.condition.text : 'unknown'}</h2>\r\n                        <p>\r\n                            {weather ? 'Max: ' + Math.floor(weather.forecast.forecastday[0].day['maxtemp_' + params.temp]) + '° ' : '0'}\r\n                            {weather ? '/ Min: ' + Math.floor(weather.forecast.forecastday[0].day['mintemp_' + params.temp]) + '°' : '0'}\r\n                        </p>\r\n                    </div>\r\n                    <div className='middle'>\r\n                        <div className='clouds'>\r\n                            <div className='cloud cloud1'></div>\r\n                            <div className='cloud cloud2'></div>\r\n                            <div className='cloud cloud3'></div>\r\n                            <div className='cloud cloud4'></div>\r\n                            <div className='cloud cloud5'></div>\r\n                            <div className='cloud cloud6'></div>\r\n                            <div className='cloud cloud7'></div>\r\n                        </div>\r\n                        <div className='sun-viewbox'>\r\n                            <div className='sun'></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='bot'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 505 200\"><defs><linearGradient id=\"Dégradé_sans_nom_13\" x1=\"352.96\" y1=\"60.25\" x2=\"386.46\" y2=\"200.15\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stopColor=\"#fff\"/><stop offset=\"0.03\" stopColor=\"#fff\" stopOpacity=\"0.93\"/><stop offset=\"0.18\" stopColor=\"#fff\" stopOpacity=\"0.65\"/><stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0.42\"/><stop offset=\"0.45\" stopColor=\"#fff\" stopOpacity=\"0.24\"/><stop offset=\"0.57\" stopColor=\"#fff\" stopOpacity=\"0.11\"/><stop offset=\"0.66\" stopColor=\"#fff\" stopOpacity=\"0.03\"/><stop offset=\"0.73\" stopColor=\"#fff\" stopOpacity=\"0\"/></linearGradient><linearGradient id=\"Dégradé_sans_nom_13-2\" x1=\"277.11\" y1=\"48.33\" x2=\"298.29\" y2=\"85.02\" xlinkHref=\"#Dégradé_sans_nom_13\"/><linearGradient id=\"Dégradé_sans_nom_13-3\" x1=\"296.38\" y1=\"13.1\" x2=\"317.54\" y2=\"66.44\" xlinkHref=\"#Dégradé_sans_nom_13\"/><linearGradient id=\"Dégradé_sans_nom_13-4\" x1=\"170.88\" y1=\"88.15\" x2=\"211.06\" y2=\"113.13\" xlinkHref=\"#Dégradé_sans_nom_13\"/><linearGradient id=\"Dégradé_sans_nom_13-5\" x1=\"273.47\" y1=\"35.18\" x2=\"303.17\" y2=\"63.34\" xlinkHref=\"#Dégradé_sans_nom_13\"/></defs><g id=\"Calque_2\" data-name=\"Calque 2\"><g id=\"Calque_3\" data-name=\"Calque 3\"><polygon id=\"mount\" className=\"cls-1\" points=\"4.5 160.5 148.5 60.5 155.5 60.5 162.5 56.5 168.5 61.5 181 52 188 53 200 41 208 41 236 13 243 15 250 6 257 10 259 0 279 11 285 11 301 25 314 26 330 42 353 46 377 64 382 65 407 87 415 83 423 90 433 89 505 146 505 419 0 419 4.5 160.5\"/><g id=\"shadows\"><polygon className=\"cls-2\" points=\"314 206 280 152 261 144 236 121 236 103 253 114 236 90 236 77 260 94 260 83 282 106 315 121 312 110 334 120 332 94 317 74 331 80 325 62 347 61 339 51 348 55 353 46 368 65 377 64 382 65 407 87 411 90 415 83 431 98 433 89 505 146 478 158 457 134 410 106 451 141 435 171 413 161 406 149 365 118 407 174 314 206\"/><polygon className=\"cls-3\" points=\"286 84 279 71 257 55 277 59 263 40 313 69 286 84\"/><polygon className=\"cls-4\" points=\"316 63 264 23 250 6 269 15 259 0 279 11 285 11 301 25 314 26 330 42 353 46 316 63\"/><path className=\"cls-5\" d=\"M179,139c-1-2-24-35-24-35l42,12L153,88l-2-16,21,11h7l27,28,6-24-16-4L175,63l10,1-4-12,7,1,17,16,24,14-18,68Z\"/><polygon className=\"cls-6\" points=\"286 49 267 34 272 33 288 44 294 51 286 49\"/></g></g></g></svg>\r\n                        <div className='footer-content'>\r\n                            <div className='top'>\r\n                                <h3>{weather ? new Date(weather.location.localtime_epoch * 1000).toLocaleDateString(params.lang, {weekday: 'long', day: 'numeric', month: 'short'}) : null}</h3>\r\n                                <div>\r\n                                    <svg className={toggleTabs === 1 ? 'active-svg' : null} onClick={() =>{toggleTab(1)}} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"></path></svg>\r\n                                    <svg className={toggleTabs === 2 ? 'active-svg' : null} onClick={() =>{toggleTab(2)}} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line></svg>\r\n                                    <svg className={toggleTabs === 3 ? 'active-svg' : null} onClick={() =>{toggleTab(3)}} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>\r\n                                </div>\r\n                            </div>\r\n                            <div className='line'></div>\r\n                            <div className='bot'>\r\n                                <div className={toggleTabs === 1 ? 'tab-temp' : 'hide'}>\r\n                                    {weather ? <ForecastWeatherHour key={parseInt(weather.location.localtime.substr(11,2))} data={weather.current} params={params} type={'current'} /> : null}\r\n                                    {weather ? <ForecastWeatherDay num={4} localTime={parseInt(weather.location.localtime.substr(11,2))+1} today={weather.forecast.forecastday[0]} tomorrow={weather.forecast.forecastday[1]} params={params} /> : null}\r\n                                </div>\r\n                                <div className={toggleTabs === 2 ? 'tab-stat' : 'hide'}>\r\n                                    {weather ? <Average dailyData={weather.forecast.forecastday[0].day} curentData={weather.current} params={params} /> : null}\r\n                                </div>\r\n                                <div className={toggleTabs === 3 ? 'tab-settings' : 'hide'}>\r\n                                    <Settings onChange={handleSettings}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>: <Loader/>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import React, {useState } from 'react'\r\nimport './LocationInput.scss'\r\n\r\nexport default function LocationInput(props) {\r\n    const [city, setCity] = useState('')\r\n\r\n    // Handle data from input to parent\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(city !== ''){\r\n            props.onChange(city)\r\n        }\r\n        setCity('')\r\n    }\r\n    return (\r\n        <div className='wrapper-input'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"city\">City</label>\r\n                <input value={city} onChange={e => setCity(e.target.value)} name=\"city\" type=\"text\" autoComplete=\"off\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useRef } from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const componentEl = useRef(null);\r\n    useEffect(() => {\r\n        if(props.alert && props.alert !== ''){\r\n            componentEl.current.classList.remove(\"fade-out\");\r\n            componentEl.current.classList.add(\"fade-in\");\r\n            setTimeout(() =>{\r\n                // componentEl.current.classList.remove(\"fade-in\");\r\n                componentEl.current.classList.add(\"fade-out\");\r\n                componentEl.current.classList.remove(\"fade-in\");\r\n                setTimeout(() =>{\r\n                    props.handleAlert('')\r\n                }, 1000)\r\n            }, 3000)\r\n        }\r\n    }, [props])\r\n    function fadeOut(){\r\n        componentEl.current.classList.add(\"fade-out\");\r\n        componentEl.current.classList.remove(\"fade-in\");\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className='alert' ref={componentEl}>\r\n                <img src=\"https://img.icons8.com/dusk/64/000000/cancel.png\" alt='danger alert'/>\r\n                <p>{props.alert ? props.alert : ''}</p>\r\n                <img onClick={fadeOut} src=\"https://img.icons8.com/windows/64/ffffff/macos-close.png\" alt='close alert'/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport './App.scss'\n// Import React Router\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\n// Import React Google Analytics\nimport ReactGA from 'react-ga'\n// Import Components\nimport Weather from './components/Weather'\nimport LocationInput from './components/LocationInput';\nimport Loader from './components/Loader';\nimport Alert from './components/Alert'\n\n\n\n\nexport default function App() {\n  const [mounted, setMounted] = useState(true)\n  const [loader, setLoader] = useState(true)\n  const [userLocation, setUserLocation] = useState()\n  const [allCity, setAllCity] = useState([])\n  const [alert, setAlert] = useState()\n  useEffect(() =>{\n    ReactGA.initialize('G-S75JB5D6QL')\n    ReactGA.pageview(window.location.pathname + window.location.search)\n    document.title='Starry Weather'\n    \n    // Display a loader\n    setTimeout(() =>{\n      setLoader(false)\n    }, 1000)\n\n    // Get location of user with a native navigator methods\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(el =>{\n          setUserLocation({lat:el.coords.latitude, lng:el.coords.longitude})\n        });\n      } else {\n        setMounted(false)\n      }\n    }\n    getLocation()\n  },[])\n\n  // Handle display of a new location from <LocationInput/>\n  function handleLocation(city){\n    setAllCity([...allCity, city])\n  }\n  \n   // Handle display of a new alert from <Weather/> to <Alert/> by 'alert'\n  function handleAlert(alert){\n    setAlert(alert)\n  }\n\n\n\n\n  return (\n    <div className='App'>\n      {loader? <Loader /> :\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <div className='slider'>\n              {mounted && <Weather coords={userLocation ? userLocation : undefined} handleAlert={handleAlert} />}\n              {allCity.map((el, index)=>(\n                <Weather key={index} city={el} handleAlert={handleAlert} /> \n              ))}\n              <div className='flex-col'>\n                <LocationInput onChange={handleLocation} alert={alert}/>\n                <Alert alert={alert} handleAlert={handleAlert}/>\n              </div>\n            </div>\n            <div className='footer'>Made with <img src=\"https://img.icons8.com/dusk/64/000000/like.png\" alt='love'/> for learning purposes by <a href=\"https://delceyhugo.dev/\">me</a>.</div>\n          </Route>\n          <Route path=\"/\">\n            <div>ERROR 404</div>\n          </Route>\n        </Switch>\n      </Router>\n      }\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}